---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Tag from "../../components/Tag.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import ArticlePreview from "../../components/ArticlePreview.astro";
// import AboutTheAuthor from "../../components/AboutTheAuthor.astro";

export async function getStaticPaths() {
  const allArticles = await getCollection("articles");

  return allArticles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await article.render();
// const articleAuthorPath = article.data.author;
// const articleAuthorName = articleAuthorPath.match(/\/([^\/]+)\.json$/)[1];
// const authorInfo = await import(
//   `../../content/authors/${articleAuthorName}.json`
// ).then((info) => info.default);
const featuredArticles = await getCollection("articles", ({ data }) => {
  return data.featured;
});
---

<BaseLayout
  title={article.data.title}
  description={article.data.subtitle}
  author={article.data.author}
  image={article.data.imageSrc}
  ogimage={`/open-graph/${article.slug}.png`}
>
  <article class="full-article | container flow" data-type="narrow">
    <div class="meta">
      <div class="flex-group align-center">
        <Tag tag={article.data.tags[0]} />
        creation date:<FormattedDate date={article.data.creationDate} />
        update date:<FormattedDate date={article.data.updateDate} />
      </div>
    </div>
    <h1 transition:name={article.data.title} class="heading-2">
      {article.data.title}
    </h1>
    <Content />
    <!-- <AboutTheAuthor
      name={authorInfo.name}
      description={authorInfo.description}
      image={authorInfo.image}
    /> -->
  </article>
  <div class="container">
    <section class="featured section | flow">
      <h2 class="heading-2">Featured articles</h2>
      <div class="grid-auto-fit">
        {
          featuredArticles
            .slice(0, 3)
            .map((article) => <ArticlePreview {article} />)
        }
      </div>
    </section>
  </div>
</BaseLayout>

<style lang="scss">
  @use "../../styles/abstracts" as *;

  .featured {
    margin-top: $section-padding-block;
    border-top: $divider;
  }
</style>
