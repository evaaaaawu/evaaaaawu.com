---
const { href, theme = "default", class: className, ...rest } = Astro.props;
let El = "button";
if (href) El = "a";
---

<El class:list={["button", className]} {href} data-type={theme} {...rest}>
  <slot />
</El>

<style lang="scss">
  @use "../styles/abstracts" as *;

  .button {
    display: inline-flex;
    justify-content: center;
    cursor: pointer;
    text-decoration: none;
    line-height: 1;
    font-family: $button-font-family;
    font-size: $button-font-size;
    text-transform: $button-text-transform;
    font-weight: $button-font-weight;
    padding: $button-padding;
    border: $button-border;
    border-radius: $button-border-radius;
    transition: 275ms ease;

    min-width: fit-content;

    &[data-type="primary"] {
      background-color: $button-primary-background;
      color: $button-primary-color;

      &:is(:hover, :focus) {
        background-color: $button-primary-background-hover;
        color: $button-primary-color-hover;
      }
    }
    &[data-type="secondary"] {
      background-color: $button-secondary-background;
      color: $button-secondary-color;
      outline: $button-secondary-outline;
      // outline-offset: $button-outline-thickness * -1;

      &:is(:hover, :focus) {
        background-color: $button-secondary-background-hover;
        color: $button-secondary-color-hover;
      }
    }
  }
</style>
