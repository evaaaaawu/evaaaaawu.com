---
interface Props {
  currentPage: number;
  totalPages: number;
}

const { currentPage, totalPages } = Astro.props;
const pages = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<nav class="flex items-center justify-center space-x-2">
  {
    currentPage > 1 && (
      <a
        href={`/articles/page/${currentPage - 1}`}
        class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
      >
        <svg
          class="mr-2 h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"
          />
        </svg>
        <span class="sr-only">Previous</span>
        Previous
      </a>
    )
  }

  {
    pages.map((page) =>
      page === currentPage ? (
        <span class="inline-flex items-center rounded-md border border-blue-500 bg-blue-50 px-4 py-2 text-sm font-medium text-blue-700">
          {page}
        </span>
      ) : (
        <a
          href={`/articles/page/${page}`}
          class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
        >
          {page}
        </a>
      )
    )
  }

  {
    currentPage < totalPages && (
      <a
        href={`/articles/page/${currentPage + 1}`}
        class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
      >
        Next
        <svg
          class="ml-2 h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"
          />
        </svg>
        <span class="sr-only">Next</span>
      </a>
    )
  }
</nav>
